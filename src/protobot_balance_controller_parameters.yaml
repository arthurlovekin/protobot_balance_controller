protobot_balance_controller:
  linear_command_interface: {
    type: string,
    default_value: "linear",
    description: "Name of the linear command interface",
    validation: {
      not_empty<>: []
    }
  }

  angular_command_interface: {
    type: string,
    default_value: "angular",
    description: "Name of the angular command interface",
    validation: {
      not_empty<>: []
    }
  }

  pendulum_frame_id: {
    type: string,
    default_value: "pendulum_frame",
    description: "Find the pitch of the pendulum_frame with respect to the odom_frame. The pendulum_frame is oriented such that 0 pitch is balancing",
    validation: {
      not_empty<>: []
    }
  }

  # will likely be removed in the future
  imu_frame_id: {
    type: string, 
    default_value: "imu_link",
    description: "Frame of the IMU (will be removed in the future in favor of a different node that keeps the tf state updated from IMU data)",
    validation: {
      not_empty<>: []
    }
  }

  odom_frame_id: {
    type: string,
    default_value: "odom",
    description: "Find the pitch of the pendulum_frame with respect to the odom_frame",
    validation: {
      not_empty<>: []
    }
  }

  kp: {
    type: double,
    default_value: 1.0,
    description: "Proportional gain"
  }

  ki: {
    type: double,
    default_value: 0.0,
    description: "Integral gain"
  }

  kd: {
    type: double,
    default_value: 0.0,
    description: "Derivative gain"
  }

  antiwindup_integral_max: {
    type: double,
    default_value: 10.0,
    description: "Maximum value for the integral term"
  }

  antiwindup_integral_min: {
    type: double,
    default_value: -10.0,
    description: "Minimum value for the integral term"
  }

  pitch_setpoint_gain: {
    type: double,
    default_value: 1.0,
    description: "Scale the input linear velocity (m/s) into an angle (degrees) to determine the pitch setpoint"
  }

  pitch_threshold_degrees_min: {
    type: double,
    default_value: -20.0,
    description: "If the pitch of the pendulum_frame wrt. odom_frame lies within the threshold min and max, then switch to balance-mode. Otherwise, stay in diff-drive mode."
  }

  pitch_threshold_degrees_max: {
    type: double,
    default_value: 20.0,
    description: "If the pitch of the pendulum_frame wrt. odom_frame lies within the threshold min and max, then switch to balance-mode. Otherwise, stay in diff-drive mode."
  }

  angular_velocity_gain: {
    type: double,
    default_value: 1.0,
    description: "Scale the input angular velocity (rad/s) by a constant factor"
  }

  cmd_vel_timeout_seconds: {
    type: double,
    default_value: 0.5,
    description: "Timeout to consider cmd_vel commands old",
    validation: {
      gt_eq<>: [0.0]
    }
  }
